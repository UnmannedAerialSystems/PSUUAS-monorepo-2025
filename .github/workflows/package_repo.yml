name: Package Repository

on:
  push:
    branches:
      - main 

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: List workspace contents (debug)
      run: ls -la

    - name: Get latest release version
      id: get_version
      run: |
        # Get the latest tag that looks like v1, v2, etc.
        latest=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' | sed 's/v//')
        if [[ -z "$latest" ]]; then
          next=1
        else
          next=$((latest + 1))
        fi
        echo "next_version=v$next" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Strip any .git files or directories
      run: |
        find . -name ".git*" -exec rm -rf {} +

    - name: Remove any images
      run: |
        find . \( -name "*.png" -o -name "*.jpg" -o -name "*.jpeg" -o -name "*.gif" -o -name "*.bmp" -o -name "*.svg" \) -type f -exec rm -f {} +

    - name: Remove start_uas.sh
      run: |
        find . -name "start_uas.sh" -type f -exec rm -f {} +
    
    - name: Create tar.gz safely outside workspace
      run: |
        mkdir -p dist  # Make sure dist/ exists
        mkdir -p dist-temp  # Temporary directory for the tarball
        tar -czf dist-temp/uas-package.tar.gz .
        mv dist-temp/uas-package.tar.gz dist/
        echo "âœ… Tarball created:"
        ls -la dist/
    
    - name: Upload tarball artifact
      uses: actions/upload-artifact@v4
      with:
        name: uas-package
        path: dist/uas-package.tar.gz
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.next_version }}
        name: Release ${{ steps.get_version.outputs.next_version }}
        files: dist/uas-package.zar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
